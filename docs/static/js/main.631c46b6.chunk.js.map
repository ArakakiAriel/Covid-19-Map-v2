{"version":3,"sources":["helpers/axiosCalls.js","components/country/SearchCountry.js","hooks/useForm.js","helpers/commaSeparator.js","components/country/CountryTable.js","components/country/Charts.js","components/country/CountryScreen.js","CovidApp.js","index.js"],"names":["axiosCall","url","a","method","data","headers","console","log","axios","then","response","response_data","loading","error","catch","message","SearchCountry","setCountry","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","useForm","country","handleSearch","e","preventDefault","className","style","maxWidth","class","onSubmit","autoComplete","type","placeholder","onChange","commaSeparator","number","toString","replace","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","CountryTable","countryData","classes","TableContainer","component","Paper","Table","size","aria-label","TableHead","align","TableBody","map","day","key","scope","updated_date","total","confirmed","actives","deaths","recovered","percentage","new_confirmed_cases","new_death_cases","new_recovered_cases","growth_factor","Charts","line_key","x_axis_key","stroke_color","countryDataReversed","reverse","width","height","ResponsiveContainer","LineChart","margin","top","right","bottom","left","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","YAxis","Tooltip","CountryScreen","setData","urlCountry","urlCountryGrowth","useEffect","call","growthResponse","formatTableData","tableData","textAlign","arrayA","arrayB","formatedData","dataA","index","CovidApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.631c46b6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const axiosCall = async (url, method='GET', data={}, headers={}) => {\r\n        console.log(\"ENTRO AL AXIOS CALL\")\r\n        const response = await axios({\r\n            method,\r\n            url,\r\n            headers,\r\n            data\r\n        }).then(function (response) {\r\n            return {response_data: response.data, loading:false, error:false};\r\n        }).catch(function (error) {\r\n            return {response_data:error.response.data.message, loading:false, error:true};\r\n        });\r\n        return response;\r\n}\r\n","import React,{ useState }from 'react'\r\nimport { useForm} from '../../hooks/useForm'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nexport const SearchCountry = ({setCountry}) => {\r\n    \r\n\r\n    const [{country}, handleInputChange, reset] =useForm({country: \"\"});\r\n\r\n    const handleSearch = async (e) => {\r\n        e.preventDefault();\r\n        setCountry(country);\r\n\r\n        console.log(country)\r\n        reset();\r\n\r\n    }\r\n    return (\r\n        <div className=\"ml-3\" style={{maxWidth:\"90%\"}}>\r\n            <form class=\"row g-3\" onSubmit={handleSearch} autoComplete=\"off\">\r\n                <div className=\"col-md-9\">\r\n                    <input type=\"text\"\r\n                    placeholder=\"Country Name\"\r\n                    className=\"form-control\"\r\n                    name=\"country\"\r\n                    value = {country}\r\n                    onChange={handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                    <button className=\"btn btn-block btn-outline-primary\">Search</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nSearchCountry.propTypes = {\r\n    setCountry: PropTypes.func.isRequired,\r\n};","import { useState } from 'react'\r\n\r\n\r\nexport const useForm = (initialState = {}) => { //Inicializamos el initialState como un objeto vacío para que no rompa en caso de que no se le envíe un objeto inicial\r\n    const [values, setValues] = useState(initialState);\r\n\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n    const handleInputChange = ({target}) => { \r\n        setValues({\r\n            ...values, \r\n            [target.name]: target.value,\r\n        })\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","\r\n\r\nexport const commaSeparator = (number) => {\r\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { commaSeparator } from '../../helpers/commaSeparator';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n}))(TableRow);\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n// const data = {\r\n//     updated_date,\r\n//     total_confirmed,\r\n//     total_actives,\r\n//     total_deaths,\r\n//     total_recovered,\r\n//     percentage_actives,\r\n//     percentage_deaths,\r\n//     percentage_recovered,\r\n//     new_confirmed,\r\n//     new_deaths,\r\n//     new_recovered,\r\n//     grow_factor\r\n// }\r\nexport const CountryTable = ({countryData}) => {\r\n  const classes = useStyles();\r\n  console.log(\"ENTRE AL COUNTRY TABLE\");\r\n  console.log(countryData)\r\n  if(!countryData){\r\n    return (<div></div>);\r\n  }else{\r\n    return (\r\n      <TableContainer component={Paper}>\r\n          <Table className={classes.table} size=\"small\"  aria-label=\"a dense table\">\r\n              <TableHead>\r\n              <TableRow>\r\n                <StyledTableCell>{countryData[0].country}</StyledTableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                  <StyledTableCell>Updated Date</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Confirmed</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Actives</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Deaths</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Recovered</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Percentage Actives</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Percentage Deaths</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Percentage Recovered</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">New Confirmed</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">New Deaths</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">New Recovered</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Growth Factor</StyledTableCell>\r\n              </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n              {countryData.map((day) => (\r\n                  <StyledTableRow key={day.name}>\r\n                  <StyledTableCell component=\"th\" scope=\"row\">\r\n                      {day.updated_date}\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{commaSeparator(day.total.confirmed)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{commaSeparator(day.total.actives)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{commaSeparator(day.total.deaths)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{commaSeparator(day.total.recovered)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.percentage.actives)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.percentage.deaths)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.percentage.recovered)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.new_confirmed_cases) && commaSeparator(day.new_confirmed_cases)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.new_death_cases) && commaSeparator(day.new_death_cases)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.new_recovered_cases) && commaSeparator(day.new_recovered_cases)}</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">{(day.growth_factor)}</StyledTableCell>\r\n                  </StyledTableRow>\r\n              ))}\r\n              </TableBody>\r\n          </Table>\r\n      </TableContainer>\r\n    )\r\n  }\r\n    \r\n}\r\n\r\n","import React from 'react'\nimport {ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\n\nexport const Charts = ({countryData, line_key, x_axis_key, stroke_color = \"#0B98E6\"}) => {\n\n  let countryDataReversed = countryData?[...countryData]:[];\n  countryDataReversed.reverse();\n  console.log(\"CHARTS\")\n  console.log(countryData)\n  console.log(line_key, x_axis_key)\n\n  if(!countryData){\n    return (\n        <div>\n        </div>\n    )\n  }\n\n\n    return (\n        <div className=\"border mt-2 mb-2\" style={{ width: \"100%\", height: 300 }}>\n        <ResponsiveContainer>\n            <LineChart width={700} height={300} data={countryDataReversed} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n                <Line type=\"monotone\" dataKey={line_key} stroke={stroke_color} />\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                <XAxis dataKey={x_axis_key} />\n                <YAxis />\n                <Tooltip />\n            </LineChart>\n\t\t\t</ResponsiveContainer>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react';\r\nimport { axiosCall } from '../../helpers/axiosCalls';\r\nimport { StatisticsTable } from '../StatisticsTable';\r\nimport { SearchCountry } from './SearchCountry';\r\nimport { CommonLoading } from 'react-loadingg';\r\nimport { commaSeparator } from '../../helpers/commaSeparator';\r\nimport { CountryTable } from './CountryTable';\r\nimport { Example } from './Example';\r\nimport { Charts } from './Charts';\r\n\r\nexport const CountryScreen = () => {\r\n\r\n    const [country, setCountry] = useState(\"\")\r\n    const [data, setData] = useState({loading: false, error:false, response:null});\r\n    let error = false;\r\n    \r\n    const urlCountry = `https://covid-api-info.herokuapp.com/api/covid/cases/country/${country}`;\r\n    const urlCountryGrowth = `https://covid-api-info.herokuapp.com/api/covid/cases/country/${country}/growth`;\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        console.log(\"Country cambio\");\r\n        console.log(data.response)\r\n        if(country != \"\"){\r\n            const response = call();\r\n        }\r\n\r\n    }, [country])\r\n\r\n    const call = async () => {\r\n        console.log(\"Entro al call\")\r\n        setData({...data, loading: true})\r\n        const response = await axiosCall(urlCountry);\r\n        const growthResponse = await axiosCall(urlCountryGrowth);\r\n        if(response.error || growthResponse.error ){\r\n            error = true;\r\n            setData({...data, loading: false, response:null});\r\n        }else{\r\n            console.log(response.response_data)\r\n            let tableData = await formatTableData(response.response_data, growthResponse.response_data);\r\n            await setData({...data, response: tableData});\r\n            \r\n        }\r\n        console.log(data.response);\r\n    }\r\n    return (\r\n        <>\r\n            {data.response && <h1>{data.response[0].country}</h1>}\r\n            <hr/>\r\n\r\n\r\n            <div>\r\n                <div>\r\n                    <SearchCountry setCountry={setCountry}/>\r\n                </div>\r\n                {\r\n                    data.response && \r\n                    <div className=\"mt-3 container\">\r\n                        <div className=\"row\">\r\n                            <div style={{ width: \"100%\", textAlign: \"center\" }}>New Confirmed Cases</div>\r\n                            <Charts countryData={data.response}  line_key={\"new_confirmed_cases\"} x_axis_key={\"updated_date\"} />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ width: \"100%\", textAlign: \"center\" }}>New Death Cases</div>\r\n                            <Charts countryData={data.response}  line_key={\"new_death_cases\"} x_axis_key={\"updated_date\"} stroke_color={\"#DA2D00\"}/>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div style={{ width: \"100%\", textAlign: \"center\" }}>New Recovered Cases</div>\r\n                            <Charts countryData={data.response}  line_key={\"new_recovered_cases\"} x_axis_key={\"updated_date\"} stroke_color={\"#A4C406\"}/>\r\n                        </div>\r\n                    </div>\r\n                }\r\n                \r\n                <div className=\"mt-3\">\r\n                    {\r\n                        (!data.loading?<CountryTable countryData={data.response}/>:<CommonLoading />)\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n\r\n            {/* <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <SearchCountry setCountry={setCountry}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <StatisticsTable/>\r\n                    <hr/>\r\n                    <div className=\"container\">\r\n                        <div className=\"row border\" classkey=\"total-row\">\r\n                                <div className=\"col\" style={{\"align-items\":\"center\",\"justify-content\": \"center\"}} classkey=\"total-col\">Total</div>\r\n                        </div>\r\n                        <div className=\"row border\" classkey={`row-name-title`} >\r\n                                <div className=\"col border\" classkey=\"confirmed\">Confirmed</div>\r\n                                <div className=\"col border\" classkey=\"Actives\">Actives</div>\r\n                                <div className=\"col border\" classkey=\"Deaths\">Deaths</div>\r\n                                <div className=\"col border\" classkey=\"Recovered\">Recovered</div>\r\n                        </div>\r\n                    {\r\n                        (data.loading) && <CommonLoading />\r\n                    }\r\n                    {\r\n                            (data.response) && data.response.map((day, index) => \r\n\r\n                            <div className=\"row border\" classkey={`row-${index}`} >\r\n                                <div className=\"col border\" classkey={`col-date-${index}`}>{day.updated_date}</div>\r\n                                <div className=\"col border\" classkey={`col-confirmed-${index}`}>{commaSeparator(day.total.confirmed)}</div>\r\n                                <div className=\"col border\" classkey={`col-actives-${index}`}>{commaSeparator(day.total.actives)}</div>\r\n                                <div className=\"col border\" classkey={`col-deaths-${index}`}>{commaSeparator(day.total.deaths)}</div>\r\n                                <div className=\"col border\" classkey={`col-recovered-${index}`}>{commaSeparator(day.total.recovered)}</div>\r\n                                <div className=\"col border\" classkey={`col-recovered-${index}`}>{commaSeparator(day.total.recovered)}</div>\r\n                                <div className=\"col border\" classkey={`col-recovered-${index}`}>{commaSeparator(day.total.recovered)}</div>\r\n                                <div className=\"col border\" classkey={`col-recovered-${index}`}>{commaSeparator(day.total.recovered)}</div>\r\n                            </div>)\r\n                    }\r\n                    </div>\r\n                   \r\n                </div>\r\n            </div> */}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nconst formatTableData = async (arrayA, arrayB) => {\r\n    let formatedData = [];\r\n    await arrayA.map((dataA, index) => \r\n        formatedData[index] = {\r\n            ...dataA,\r\n            ...arrayB[index]\r\n        }\r\n    );\r\n\r\n    return formatedData;\r\n}\r\n","import React from 'react';\r\nimport { CountryScreen } from './components/country/CountryScreen';\r\nimport './CovidApp.css';\r\n\r\nfunction CovidApp() {\r\n  return (\r\n    <>\r\n      <CountryScreen/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CovidApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CovidApp from './CovidApp';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CovidApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}